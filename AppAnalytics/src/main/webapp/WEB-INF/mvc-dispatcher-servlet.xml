<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans     
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan
		base-package="com.AppAnalytics.controllers" />

	<mvc:annotation-driven />

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:database.properties</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<tx:advice id="transactionAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"></tx:method>
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<aop:config>
		<aop:pointcut
			expression="execution(* com.AppAnalytics.service.*Service*.*(..))"
			id="analyticServiceOperations" />
		<aop:advisor advice-ref="transactionAdvice"
			pointcut-ref="analyticServiceOperations" />
	</aop:config>

	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="username" value="vigneshm@infofaces.co.in" />
		<property name="password" value="vicky15296info" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.socketFactory.port">465</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.port">465</prop>
			</props>
		</property>
	</bean>


	<!-- Service Beans -->
	<bean id="dimensionAndMetricsService"
		class="com.AppAnalytics.service.DimnsionAndMetricsServiceImpl" />
	<bean id="userService"
		class="com.AppAnalytics.service.UserServiceImpl" />
	<bean id="accessTokenService"
		class="com.AppAnalytics.service.AccessTokenServiceImpl" />

	<bean id="mailerService"
		class="com.AppAnalytics.service.MailerServiceImpl" />

	<bean id="hibernateCfg"
		class="com.AppAnalytics.utils.HibernateCfg" />



	<!-- Dao Beans -->
	<bean id="dimensionAndMetricsDao"
		class="com.AppAnalytics.dao.DimensionsAndMetricsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="mailerDao" class="com.AppAnalytics.dao.MailerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="userDao" class="com.AppAnalytics.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>





</beans>